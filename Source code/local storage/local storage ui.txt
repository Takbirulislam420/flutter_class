import 'package:bangla_status/child_page/main_ui.dart';
import 'package:bangla_status/data/local/ldb_helper.dart';
import 'package:clipboard/clipboard.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:share_plus/share_plus.dart';

class MyFavouritePage extends StatefulWidget {
  const MyFavouritePage({super.key});

  @override
  State<MyFavouritePage> createState() => _MyFavouritePageState();
}

class _MyFavouritePageState extends State<MyFavouritePage> {
  // MyfavouriteController myfavouriteController =
  //     Get.put(MyfavouriteController());
  shareText(mysharetext) {
    Share.share(mysharetext);
  }

  List<Map<String, dynamic>> allNotes = [];
  LdbHelper? dbRef;

  @override
  void initState() {
    super.initState();
    dbRef = LdbHelper.getInstance;
    getnotes();
  }

  void getnotes() async {
    allNotes = await dbRef!.getAllNotes();
    setState(() {});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          backgroundColor: Theme.of(context).colorScheme.inversePrimary,
          title: const Text("Favourite list"),
          actions: [
            Builder(
              builder: (context) {
                return IconButton(
                    icon: const Icon(
                      Icons.home,
                      color: Colors.black,
                    ),
                    onPressed: () {
                      Get.to(() => const MainUi());
                    });
              },
            ),
          ],
        ),
        body: allNotes.isNotEmpty
            ? ListView.builder(
                itemCount: allNotes.length,
                itemBuilder: (_, index) {
                  return Card(
                    elevation: 5,
                    child: Column(
                      children: [
                        Container(
                            alignment: Alignment.center,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(10),
                              color: Colors.green,
                            ),
                            height: 200,
                            width: double.infinity,
                            child: Text(
                                allNotes[index][LdbHelper.columnNoteTitle])),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            ElevatedButton(
                              onPressed: () {
                                shareText("share");
                              },
                              child: const Row(
                                children: [Icon(Icons.share), Text("Share")],
                              ),
                            ),
                            ElevatedButton(
                              onPressed: () async {
                                bool check = await dbRef!.deleteNote(
                                    sno: allNotes[index]
                                        [LdbHelper.columnNoteSno]);
                                if (check) {
                                  getnotes();
                                }
                              },
                              child: const Row(
                                children: [
                                  Icon(
                                    Icons.delete,
                                    color: Colors.red,
                                  ),
                                  Text("love")
                                ],
                              ),
                            ),
                            ElevatedButton(
                              onPressed: () {
                                // ignore: avoid_print
                                FlutterClipboard.copy("copy");
                              },
                              child: const Row(
                                children: [Icon(Icons.copy), Text("Copy")],
                              ),
                            ),
                          ],
                        )
                      ],
                    ),
                  );
                })
            : const Center(
                child: Text("No Data"),
              ),
        floatingActionButton: FloatingActionButton(
          onPressed: () async {
            bool check = await dbRef!
                .addNote(mTitle: "this is title", mDes: "this is description");
            if (check) {
              getnotes();
            }
          },
          child: const Icon(Icons.add),
        ));
  }
}
